apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: democonfig-service
spec:
  selector:
    app: pacman-api-config
  ports:
    - protocol: "TCP"
      NordPort: 30236
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8888 # The port exposed by the service
  type: NordPort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: pacman-api-config
spec:
  selector:
    matchLabels:
      app: pacman-api-config
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-config
    spec:
      containers:
        - name: pacman-api-config
          image: configapi:first # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8888
---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: authdemo-service
spec:
  selector:
    app: pacman-api-auth
  ports:
    - protocol: "TCP"
      NordPort: 31621
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8087 # The port exposed by the service
  type: NordPort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: authdemo-deployment
spec:
  selector:
    matchLabels:
      app: pacman-api-auth
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-auth
    spec:
      containers:
        - name: pacman-api-auth
          image: authapi:first # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8087 
---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: admindemo-service
spec:
  selector:
    app: pacman-api-admin
  ports:
    - protocol: "TCP"
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8084 # The port exposed by the service
  type: NodePort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: admindemo-deployment
spec:
  selector:
    matchLabels:
      app: pacman-api-admin
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-admin
    spec:
      containers:
        - name: pacman-api-admin
          image: adminapi:v1 # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8084
---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: assetdemo-service
spec:
  selector:
    app: pacman-api-asset
  ports:
    - protocol: "TCP"
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8083 # The port exposed by the service
  type: NodePort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: assetdemo-deployment
spec:
  selector:
    matchLabels:
      app: pacman-api-asset
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-asset
    spec:
      containers:
        - name: pacman-api-asset
          image: assetapi:v1 # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8083
---          
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: notidemo-service
spec:
  selector:
    app: pacman-api-noti
  ports:
    - protocol: "TCP"
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8082 # The port exposed by the service
  type: NodePort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: notidemo-deployment
spec:
  selector:
    matchLabels:
      app: pacman-api-noti
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-noti
    spec:
      containers:
        - name: pacman-api-noti
          image: notificationapi:v1 # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8082
---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: statisticsdemo-service
spec:
  selector:
    app: pacman-api-statistics
  ports:
    - protocol: "TCP"
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8184 # The port exposed by the service
  type: NodePort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: statisticsdemo-deployment
spec:
  selector:
    matchLabels:
      app: pacman-api-statistics
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-statistics
    spec:
      containers:
        - name: pacman-api-statistics
          image: statisticsapi:v1 # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8184
---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: vulnerabilitydemo-service
spec:
  selector:
    app: pacman-api-vulnerability
  ports:
    - protocol: "TCP"
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8085 # The port exposed by the service
  type: NodePort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: vulnerabilitydemo-deployment
spec:
  selector:
    matchLabels:
      app: pacman-api-vulnerability
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-vulnerability
    spec:
      containers:
        - name: pacman-api-vulnerability
          image: vulnerabilityapi:v1 # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8085
---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: compdemo-service
spec:
  selector:
    app: pacman-api-comp
  ports:
    - protocol: "TCP"
      port: 80 # The port that the service is running on in the cluster
      targetPort: 8081 # The port exposed by the service
  type: NodePort # type of the service. LoadBalancer indicates that our service will be external.
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: compdemo-deployment
spec:
  selector:
    matchLabels:
      app: pacman-api-comp
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: pacman-api-comp
    spec:
      containers:
        - name: pacman-api-comp
          image: complianceapi:v1 # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8081
